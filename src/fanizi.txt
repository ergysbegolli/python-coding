import simplegui
import random

suits = ['C','S','H','D']
ranks = ['A','2','3','4','5','6','7','8','9','T','J','Q','K']
#values = {'A':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9,'T':10,'J':10,'Q':10,'K':10}
values = {}
i=0
while i<13:
    values[ranks[i]]=i+1
    if i>= 9:
        values[ranks[i]]=10
    i+=1
print values

card_size = (72,96)
card_center = (36,48)
card_face = simplegui.load_image("http://storage.googleapis.com/codeskulptor-assets/cards_jfitz.png")
card_back = simplegui.load_image("http://storage.googleapis.com/codeskulptor-assets/card_jfitz_back.png")

in_play = False
outcome = "Deal?"
score = 0
i = 0

class Card :
    def __init__ (self, suit, rank):
        self.suit = suit
        self.rank = rank
       
    def __str__(self):
        return self.suit + self.rank
        
    def get_suit(self):
        return self.suit
    
    def get_rank(self):
        return self.rank
    
    def draw(self, canvas, pos):
        canvas.draw_image (card_face, [card_center[0]+ranks.index(self.rank)*card_size[0],card_center[1]+suits.index(self.suit)*card_size[1]],card_size, pos, card_size)
        
class Hand:
    def __init__(self): 
        self.hand = []
        if in_play:
            self.hand= [a.d.pop(0),a.d.pop(0)]
        
    
    def __str__ (self):
        return str(self.hand)
    
    def add_card (self, card):
        self.hand.append (card)
        self.hand_value()
        
    def hand_value (self):
        self.hand_val = 0
        is_there = False
        for card in self.hand:
            self.hand_val += values[card.rank]
            if card.rank == 'A':
                is_there = True
        
        if is_there:
            if self.hand_val <= 11:
                return self.hand_val + 10
            else:
                return self.hand_val
        else:
            return self.hand_val
       
       
    def busted (self):
        global in_play
        in_play = True
        if self.hand_value ()>21:
            in_play = False
        return in_play
    
    def draw (self,canvas,pos):    
        for card in self.hand:
            card.draw(canvas, pos)
            pos [0] += card_size[0]+5
                

class Deck:
    def __init__(self):
        
        self.d = []
        for i in suits:
            for j in ranks:
                self.d.append(Card(i, j))
    
    def shuffle(self):
        for card in player.hand:
            self.d.append(card)
        for card in dealer.hand:
            self.d.append (card)
        random.shuffle(self.d)
        
        
    def deal_card ():
        pass
    
def deal():
    global in_play,dealer,player,outcome
    a.shuffle ()
    in_play = True
    outcome = "Hit or Stand?"
    dealer = Hand()
    player = Hand()
    
    
def hit ():
    global in_play, outcome, score
    if in_play:
        player.add_card (a.d.pop(0))
        print player.hand_value()
        player.busted()
        if not player.busted():
            outcome = "You busted, dealer wins! New Deal?"
            score -=1
    
    
def stand ():
    global in_play, outcome, score
    while in_play:
        if dealer.hand_value() >= 17:
            if not dealer.busted():
                outcome = "Dealer busted, you win! New Deal?"
                score += 1
            elif dealer.hand_value() < player.hand_value():
                outcome = "You win! New Deal?"
                score += 1
            else:
                outcome = "Dealer wins! New Deal?"
                score -= 1
            in_play = False
        else:
            dealer.add_card (a.d.pop(0))
        
def draw (canvas):
    
    canvas.draw_text ("BlackJack", (150,100), 50, "Black")
    canvas.draw_text ("Score: "+str(score), (380,550), 30, "Black")
    canvas.draw_text (outcome, (20,180),30,"yellow")
    dealer.draw(canvas, [56,250])
    if in_play:
        canvas.draw_image (card_back, card_center,card_size, [56, 250], card_size)
    player.draw (canvas, [56, 450])

dealer = Hand()
player = Hand()
a = Deck()
c = range(0,52)

print player.hand_value()

f = simplegui.create_frame("Blackjack",500,600)
f.set_canvas_background("Green")
f.add_button ("deal",deal,100)
f.add_button ("hit",hit,100)
f.add_button ("stand",stand,100)
f.set_draw_handler(draw)
f.start()